Readability.js
A standalone version of the readability library used for Firefox Reader View.

Installation
Readability is available on npm:

npm install @mozilla/readability
You can then require() it, or for web-based projects, load the Readability.js script from your webpage.

Basic usage
To parse a document, you must create a new Readability object from a DOM document object, and then call the parse() method. Here's an example:

var article = new Readability(document).parse();
If you use Readability in a web browser, you will likely be able to use a document reference from elsewhere (e.g. fetched via XMLHttpRequest, in a same-origin <iframe> you have access to, etc.). In Node.js, you can use an external DOM library.

API Reference
new Readability(document, options)
The options object accepts a number of properties, all optional:

debug (boolean, default false): whether to enable logging.
maxElemsToParse (number, default 0 i.e. no limit): the maximum number of elements to parse.
nbTopCandidates (number, default 5): the number of top candidates to consider when analysing how tight the competition is among candidates.
charThreshold (number, default 500): the number of characters an article must have in order to return a result.
classesToPreserve (array): a set of classes to preserve on HTML elements when the keepClasses options is set to false.
keepClasses (boolean, default false): whether to preserve all classes on HTML elements. When set to false only classes specified in the classesToPreserve array are kept.
disableJSONLD (boolean, default false): when extracting page metadata, Readability gives precedence to Schema.org fields specified in the JSON-LD format. Set this option to true to skip JSON-LD parsing.
serializer (function, default el => el.innerHTML) controls how the content property returned by the parse() method is produced from the root DOM element. It may be useful to specify the serializer as the identity function (el => el) to obtain a DOM element instead of a string for content if you plan to process it further.
allowedVideoRegex (RegExp, default undefined ): a regular expression that matches video URLs that should be allowed to be included in the article content. If undefined, the default regex is applied.
linkDensityModifier (number, default 0): a number that is added to the base link density threshold during the shadiness checks. This can be used to penalize nodes with a high link density or vice versa.